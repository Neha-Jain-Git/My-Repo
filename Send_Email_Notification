Send_Email_Notification:
  runs-on: uhg-runner-m
  environment: DDIQA
  needs: deploy-on-merge
  if: always()

  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download deployment result
      uses: actions/download-artifact@v4
      with:
        name: deploy-result

    - name: Extract Error Message
      id: errors
      run: |
        if [[ "${{ needs.deploy-on-merge.outputs.deploy_status }}" == "Failed" ]]; then
          jq -r '.result.details.componentFailures[]?.problem' deploy-result.json \
            | grep -v null > error-msg.txt || true
          echo "errors=$(sed ':a;N;$!ba;s/\n/\\n/g' error-msg.txt)" >> $GITHUB_OUTPUT
        fi

    - name: Extract Failed Files
      id: failed_files
      run: |
        jq -r '.result.details.componentFailures[]?.fileName' deploy-result.json \
          | grep -v null | sort -u > failed-files.txt || true
        echo "files=$(paste -sd ',' failed-files.txt)" >> $GITHUB_OUTPUT

    - name: Map PR requester to email
      id: pr_author
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          REQUESTER=${{ github.event.pull_request.user.login }}
        else
          # fallback if itâ€™s a push (protected branch normally prevents this)
          REQUESTER="unknown"
        fi

        echo "PR opened by: $REQUESTER"

        case "$REQUESTER" in
          neha-jain) EMAIL="neha_jain@optum.com" ;;
          john-doe)  EMAIL="john.doe@optum.com" ;;
          # add mappings for all GitHub usernames here
          *) EMAIL="default-notify@optum.com" ;;
        esac

        echo "email=$EMAIL" >> $GITHUB_OUTPUT

    - name: Send Email on Failure
      if: needs.deploy-on-merge.outputs.deploy_status == 'Failed'
      uses: uhg-pipelines/epl-send-mail@v1
      with:
        subject: "Build Failure - Deployment Failed in QA"
        to: "${{ steps.pr_author.outputs.email }}"
        cc: neha_jain@optum.com
        from: "notifications@github.com"
        body: |
          The deployment to QA failed for your PR.

          Files with errors:
              ${{ steps.failed_files.outputs.files }}

          Error details:
              ${{ steps.errors.outputs.errors }}