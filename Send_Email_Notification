- name: Update LAST_GOOD_SHA_DDIQA in Environment
        run: |
          OWNER=${{ github.repository_owner }}
          REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)

          # Get numeric repo ID
          REPO_ID=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            https://api.github.com/repos/$OWNER/$REPO | jq -r .id)

          ENVIRONMENT="DDIQA"
          VARIABLE_NAME="LAST_GOOD_SHA_DDIQA"
          NEW_VALUE=$(git rev-parse HEAD)

          echo "NEW_VALUE: $NEW_VALUE"

          # Try update (PATCH)
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X PATCH \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repositories/$REPO_ID/environments/$ENVIRONMENT/variables/$VARIABLE_NAME \
            -d "{\"name\":\"$VARIABLE_NAME\",\"value\":\"$NEW_VALUE\"}")

          echo "RESPONSE: $RESPONSE"

          if [[ "$RESPONSE" -eq 404 ]]; then
            echo "Variable not found, creating..."
            RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST \
              -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repositories/$REPO_ID/environments/$ENVIRONMENT/variables \
              -d "{\"name\":\"$VARIABLE_NAME\",\"value\":\"$NEW_VALUE\"}")
          fi

          if [[ "$RESPONSE" -ge 200 && "$RESPONSE" -lt 300 ]]; then
            echo "✅ Successfully saved $VARIABLE_NAME."
          else
            echo "❌ Failed to save $VARIABLE_NAME. HTTP status: $RESPONSE"
            cat response.json
          fi