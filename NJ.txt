Got it üëç Since you said yes, I‚Äôll give you both clear options ‚Äî you can pick which one fits your promotion workflow best.


---

üîπ Option 1: Strict Sync (Deletes Included)

Target branch‚Äôs force-app/main/default/** will look exactly like source.
‚û°Ô∏è Deleted files in DDIQAGH will also be deleted in DDIUATGH.

- name: Merge force-app/main/default from source (with deletes)
        run: |
          git fetch source-origin DDIQAGH
          git checkout source-origin/DDIQAGH -- force-app/main/default
          git commit -am "Promote force-app/main/default from DDIQAGH to DDIUATGH" || echo "No changes to commit"


---

üîπ Option 2: Add/Update Only (No Deletes)

Only new/changed files get copied.
‚û°Ô∏è Deleted files in DDIQAGH are kept in DDIUATGH.

- name: Merge force-app/main/default from source (without deletes)
        run: |
          git fetch source-origin DDIQAGH
          git diff --name-status origin/DDIUATGH..source-origin/DDIQAGH -- force-app/main/default \
            | grep -E "^[AM]" | cut -f2- \
            | xargs -r -I{} git checkout source-origin/DDIQAGH -- "{}"

          git commit -am "Promote force-app/main/default (add/update only) from DDIQAGH to DDIUATGH" || echo "No changes to commit"


---

‚ö° Recommendation:

If you want your UAT branch to always stay in perfect sync with QA ‚Üí use Option 1.

If you want to preserve UAT-only files (even if deleted in QA) ‚Üí use Option 2.



---

üëâ Should I also make sure the generated package.xml reflects only the added/updated files (in case you choose Option 2)?

