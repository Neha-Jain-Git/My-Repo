name: Promote to QA

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch to merge from (e.g. Dev)'
        required: true
        default: 'Dev'
        type: choice
        options:
          - 'Dev'
      target_branch:
        description: 'Target branch to merge into (e.g. QA)'
        required: true
        default: 'QA'
        type: choice
        options:
          - 'QA'
          - 'UAT'
          - 'STAGE'

permissions:
  contents: write
  pull-requests: write
  checks: read
  actions: write

env:
  PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.email "neha.sforce@gmail.com"
          git config --global user.name "Neha Jain"

      - name: Add remote and fetch source branch
        run: |
          git remote add source-origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch source-origin ${{ github.event.inputs.source_branch }}
          
      - name: Delete files that exist in target but not in source
        run: |
          git checkout ${{ github.event.inputs.source_branch }}
          rsync -a --delete ./ ../source_snapshot/
          git checkout ${{ github.event.inputs.target_branch }}
          rsync -a --delete ../source_snapshot/ ./
          git add -u
          git commit -m "Delete files removed in source branch" || echo "No deletions to commit"
          
      - name: Merge changes from source to target (if any)
        run: |
          git merge --no-ff --allow-unrelated-histories --strategy=recursive -X theirs source-origin/${{ github.event.inputs.source_branch }} \
            -m "Promote ${{ github.event.inputs.source_branch }} to ${{ github.event.inputs.target_branch }}" || {
              echo "⚠️ Merge had conflicts. Attempting to auto-resolve."
              git status
              git ls-files --deleted
              git add -u
              git add .
              git commit -m "Auto-resolve merge conflict: favor source branch"
            }

          git push origin ${{ github.event.inputs.target_branch }}

      - name: Push changes (only if merge succeeded)
        if: ${{ success() }}
        run: |
          git push origin HEAD:${{ github.event.inputs.target_branch }}

      - name: Success message
        if: ${{ success() }}
        run: echo "✅ Successfully promoted ${{ github.event.inputs.source_branch }} to ${{ github.event.inputs.target_branch }}"

      - name: Merge Conflict Handler
        if: ${{ failure() }}
        run: |
          echo "❌ Merge conflict occurred or other issue. Manual resolution needed."
